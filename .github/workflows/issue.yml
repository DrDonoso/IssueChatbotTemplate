---
    name: issue
    run-name: 
    on:
      issues:
        types: [opened]
    
    jobs:
      issue:
        name: Get inputs from issue form
        runs-on: ubuntu-latest
        if: ${{ contains(github.event.issue.title , '[Test Issue]')}}
        timeout-minutes: 30
        steps:
          - name: Add Comment
            uses: actions/github-script@v6
            with:
              script: |
                github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: 'Workflow running on: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}',
                });
            
          - name: Get inputs
            id: inputs
            shell: bash
            run: |
              add_output(){
                local k=$1
                local v=$2
                echo "$k=$v" >> $GITHUB_OUTPUT
                echo "‚úÖ Output generated with key: $k, value: $v"
              }
              process_key(){
                  local process_key=$1
                  # Trim leading and trailing whitespace
                  process_key="$(echo -e "${process_key}" | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//')"

                  # Substitute spaces with underscores
                  process_key="${process_key// /_}"

                  # Convert to lowercase
                  process_key="${process_key,,}"

                  echo "$process_key";
              }

              process_checkbox_line(){
                  local checkbox_line=$1
                  option=$(echo "$checkbox_line" | sed 's/- \[[^]]*\] //')
                  
                  key="$(process_key "$option")"
                  value=$(echo "$checkbox_line" | grep -qE -- '- \[X\]' && echo "true" || echo "false")

                  add_output "$key" "$value"

                  escaped_lookfor=$(echo "$checkbox_line" | sed 's/[][()\.^$?*+{}|]/\\&/g')
                  nextcheckbox=$(echo "${{ github.event.issue.body }}" | awk "/$escaped_lookfor$/{getline; print}")

                  if [[ "$nextcheckbox" == "- ["* && -n "$nextcheckbox" && "$nextcheckbox" != "$checkbox_line" ]]; then
                      process_checkbox_line "$nextcheckbox"
                  fi
              }

              echo "${{ github.event.issue.body }}" | awk '/^###/ { print }' | while read line; do
                  echo "üîç Processing line: $line"
                  value=$(echo "${{ github.event.issue.body }}" | awk "/^$line$/{getline;getline; print}")

                  if [[ "$value" == "- ["* ]]; then
                      # Processing a checkbox
                      echo "‚òëÔ∏è Detected a checkbox!"
                      process_checkbox_line "$value"
                  else
                      # Remove "###" from the beginning of the string
                      key=${line##"###"}
                      
                      key="$(process_key "$key")"
                      add_output "$key" "$value"
                  fi
              done


          - uses: actions/github-script@v6
            name: Add label
            with:
              script: |
                github.rest.issues.addLabels({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  labels: ["environment/${{steps.inputs.outputs.dropdown_label}}"]
                });

        outputs:
          input: ${{ steps.inputs.outputs.input_label }}
          dropdown: ${{ steps.inputs.outputs.dropdown_label }}
          dropdown_multiple: ${{ steps.inputs.outputs.dropdown_multiple_label }}
          textarea: ${{ steps.inputs.outputs.textarea_label }}
          checkbox1: ${{ steps.inputs.outputs.checkbox_label_1 }}
          checkbox2: ${{ steps.inputs.outputs.checkbox_label_2 }}

      process:
          name: Process ${{needs.issue.outputs.dropdown}}
          runs-on: ubuntu-latest
          needs: issue
          steps:
            - name: Add Comment
              uses: actions/github-script@v6
              with:
                script: |
                  const body = `### Processed outputs:

                    **input_label**: ${{ needs.issue.outputs.input }}
                    **dropdown_label**: ${{ needs.issue.outputs.dropdown }}
                    **dropdown_multiple_label**: ${{ needs.issue.outputs.dropdown_multiple }}
                    **textarea_label**: ${{ needs.issue.outputs.textarea }}
                    **checkbox_label_1**: ${{ needs.issue.outputs.checkbox1 }}
                    **checkbox_label_2**: ${{ needs.issue.outputs.checkbox2 }}
                  `;

                  github.rest.issues.createComment({
                    issue_number: context.issue.number,
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    body: body
                  });