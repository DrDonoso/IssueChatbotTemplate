---
    name: issue
    run-name: 
    on:
      issues:
        types: [opened]
    
    jobs:
      issue:
        name: Initialize
        runs-on: ubuntu-latest
        if: ${{ contains(github.event.issue.title , '[Test Issue]')}}
        timeout-minutes: 30
        steps:
          - name: Add Comment
            uses: actions/github-script@v6
            with:
              script: |
                github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: 'Workflow running on: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}',
                });

          - name: Get inputs
            id: inputs
            shell: bash
            run: |
              echo "${{ github.event.issue.body }}" | awk '/^###/ { print }' | while read line; do
                echo "Processing line: $line"
                value=$(echo "${{ github.event.issue.body }}" | awk "/^$line$/{getline;getline; print}")

                # Remove "###" from the beginning of the string
                key=${line##"###"}
                # Trim leading and trailing whitespace
                key="$(echo -e "${key}" | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//')"

                # Substitute spaces with underscores
                key="${key// /_}"

                # Convert to lowercase
                key="${key,,}"

                echo "$key=$value" >> $GITHUB_OUTPUT
                echo "âœ… Output generated with key: $key, value: $value"
              done

          - uses: actions/github-script@v6
            name: Add label
            with:
              script: |
                github.rest.issues.addLabels({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  labels: ["environment/${{steps.inputs.outputs.dropdown_label}}"]
                });

        outputs:
          dropdown: ${{ steps.inputs.outputs.dropdown_label }}
          textarea: ${{ steps.inputs.outputs.textarea_label }}

      process:
          name: Process ${{needs.issue.outputs.dropdown}}
          runs-on: ubuntu-latest
          needs: issue
          steps:
            - name: Echo
              run: |
                echo "Dropdown: ${{ needs.issue.outputs.dropdown }}"
                echo "TextArea: ${{ needs.issue.outputs.textarea }}"